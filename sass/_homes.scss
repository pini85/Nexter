.homes {
  grid-column: center-start / center-end;
  display: grid;
  margin: 15rem 0;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  grid-gap: 7rem;

  @media only screen and (max-width: $sm) {
    margin: 8rem 0;
  }

}

.home {
  background-color: $color-grey-light-1;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-row-gap: 3.5rem;// We need to set a gap because the name was too close to the name and location

  &__img {
    width: 100%;
    // grid-column: 1/-1;
    grid-row: 1 / 2;
    grid-column: 1 / -1;
    // We must specify the row as well because we are overlapping the image to the same specific grid cell.
    z-index: 1;

  }

  &__like {
    fill: $color-primary;
    height: 2.5rem;
    width: 2.5rem;
    grid-row: 1/ 2;
    grid-column: 2 / 3;
    justify-self: end;// we want to only move the heart not the &__img.
    margin: 1rem;
    z-index: 2;

  }

  &__name {
    grid-row: 1 / 2;
    grid-column: 1 / -1;
    z-index: 3;

    font-family: $font-display;
    font-size: 1.6rem;
    text-align: center;
    padding: 1.25rem;
    background-color: $color-secondary;
    color: #fff;
    font-weight: 400;

    width: 80%;
    align-self:end;//was stretched
    justify-self: center;
    transform: translateY(50%);
  }

  &__location,
  &__rooms {
      margin-top: 2.5rem;// We need to give a margin because we set the grid-gap-row to 3.5rem. Now every row has a gap and it the location and room was too
      //close to the name
  }

  &__location,
  &__rooms,
  &__area,
  &__price {

    font-size: 1.6rem;
    margin-left: 2rem;
    /*We want to align the svg and text together. Best way is flexbox. Just write display:flex and thats it*/
    display:flex;
    align-items: center;

    svg {
      fill: $color-primary;
      height: 2rem;
      width: 2rem;
      margin-right: 1rem;
    }

  }

  &__btn {
    grid-column: 1 / -1;
  }
}
